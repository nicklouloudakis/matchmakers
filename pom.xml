<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.workable</groupId>
	<artifactId>matchmakers</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>

		<spring.boot.version>2.0.5.RELEASE</spring.boot.version>
		<swagger.version>2.8.0</swagger.version>
		<querydsl.version>4.2.1</querydsl.version>

		<db.root.url>jdbc:postgresql://${db.host}:${db.port}/postgres</db.root.url>
		<db.root.userId>postgres</db.root.userId>
		<init.database.skip>true</init.database.skip>
		<db.create_db_extra />
		<db.module.url>jdbc:postgresql://${db.host}:${db.port}/${db.module.database.name}</db.module.url>
		<db.module.userId>${module.userId}</db.module.userId>
		<db.module.password>${module.password}</db.module.password>

		<junit.jupiter.version>5.0.2</junit.jupiter.version>
		<junit.platform.version>1.0.2</junit.platform.version>

		<cobertura.version>2.7</cobertura.version>
		<jgitflow-maven-plugin.version>1.11.0</jgitflow-maven-plugin.version>
	</properties>

	<repositories>
		<repository>
			<id>central</id>
			<url>https://repo1.maven.org/maven2</url>
		</repository>
		<!--<repository>-->
			<!--<id>spring-milestones</id>-->
			<!--<url>https://repo.spring.io/milestone</url>-->
		<!--</repository>-->
		<repository>
			<id>spring-releases</id>
			<url>https://repo.spring.io/release</url>
		</repository>
		<repository>
			<id>Eclipse Paho Repo</id>
			<url>https://repo.eclipse.org/content/repositories/paho-releases/</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>central</id>
			<url>https://repo1.maven.org/maven2</url>
		</pluginRepository>
		<!--<pluginRepository>-->
			<!--<id>spring-milestones</id>-->
			<!--<url>https://repo.spring.io/milestone</url>-->
		<!--</pluginRepository>-->
		<pluginRepository>
			<id>spring-releases</id>
			<url>https://repo.spring.io/release</url>
		</pluginRepository>
	</pluginRepositories>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>${cobertura.version}</version>
				<configuration>
					<formats>
						<format>html</format>
					</formats>
					<check/>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<build>
		<plugins>
			<!-- Compilation: Java source version and Java target Bytecode version -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<release>${maven.compiler.source}</release>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.ow2.asm</groupId>
						<artifactId>asm</artifactId>
						<version>6.1.1</version> <!-- Use newer version of ASM -->
					</dependency>
				</dependencies>
			</plugin>
			<!-- Adds version file to web app -->
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
						</manifest>
					</archive>
					<webResources>
						<resource>
							<filtering>true</filtering>
							<directory>src/main/webapp</directory>
							<includes>
								<include>version</include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<configuration>
					<generateGitPropertiesFile>false</generateGitPropertiesFile>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- QueryDSL -->
			<plugin>
				<groupId>com.mysema.maven</groupId>
				<artifactId>apt-maven-plugin</artifactId>
				<version>1.1.3</version>
				<executions>
					<execution>
						<goals>
							<goal>process</goal>
						</goals>
						<configuration>
							<outputDirectory>target/generated-sources/java</outputDirectory>
							<processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Swagger codegen -->
			<!-- <plugin>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-codegen-maven-plugin</artifactId>
				<version>2.2.3</version>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>src/main/resources/api/matchmakers-api-1.0.0.yaml</inputSpec>
							<language>spring</language>
							<configOptions>
								<sourceFolder>src/main/java</sourceFolder>
							</configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin> -->
			<!-- jgitflow plugin -->
			<plugin>
				<groupId>external.movieramasian.jgitflow</groupId>
				<artifactId>jgitflow-maven-plugin</artifactId>
				<version>${jgitflow-maven-plugin.version}</version>
				<configuration>
					<flowInitContext>
						<masterBranchName>master</masterBranchName>
						<developBranchName>develop</developBranchName>
						<featureBranchPrefix>feature-</featureBranchPrefix>
						<releaseBranchPrefix>release-</releaseBranchPrefix>
						<hotfixBranchPrefix>hotfix-</hotfixBranchPrefix>
						<versionTagPrefix>version-</versionTagPrefix>
					</flowInitContext>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<noReleaseBuild>true</noReleaseBuild>
					<noFeatureBuild>true</noFeatureBuild>
					<noHotfixBuild>true</noHotfixBuild>
					<noDeploy>true</noDeploy>
				</configuration>
			</plugin>
			<!-- cobertura plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>${cobertura.version}</version>
				<configuration>
					<formats>
						<format>html</format>
					</formats>
					<quiet>true</quiet>
					<instrumentation>
						<excludes>
							<exclude>**/dto/**.class</exclude>
							<exclude>**/dto/**/**.class</exclude>
							<exclude>**/vo/**.class</exclude>
							<exclude>**/vo/**/**.class</exclude>
							<exclude>**/model/**.class</exclude>
							<exclude>**/model/**/**.class</exclude>
							<exclude>**/support/**.class</exclude>
							<exclude>**/exceptions/**.class</exclude>
						</excludes>
					</instrumentation>
					<check/>
				</configuration>
			</plugin>
			<!-- creates database user and schema, no schema objects (tables, etc) -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.5</version>
				<dependencies>
					<dependency>
						<groupId>org.postgresql</groupId>
						<artifactId>postgresql</artifactId>
						<version>9.4-1206-jdbc42</version>
					</dependency>
				</dependencies>
				<configuration>
					<driver>org.postgresql.Driver</driver>
					<url>${db.root.url}</url>
					<username>${db.root.userId}</username>
					<password>${db.root.password}</password>
					<enableFiltering>true</enableFiltering>
					<autocommit>true</autocommit>
					<orderFile>ascending</orderFile>
				</configuration>
				<executions>
					<!-- need yearEnd connect with root user yearEnd create database and module user -->
					<execution>
						<id>init-db</id>
						<phase>validate</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<sqlCommand>
								DROP DATABASE IF EXISTS ${db.module.database.name};
								DROP USER IF EXISTS ${db.module.userId};
								CREATE USER ${db.module.userId} LOGIN PASSWORD '${db.module.password}' NOCREATEDB NOCREATEROLE NOREPLICATION VALID UNTIL 'infinity';
								CREATE DATABASE ${db.module.database.name} WITH ENCODING='UTF8' ${db.create_db_extra} OWNER=${db.module.userId} CONNECTION LIMIT=-1;
							</sqlCommand>
							<skip>${init.database.skip}</skip>
						</configuration>
						<inherited>false</inherited>
					</execution>
					<!-- need yearEnd connect with module user in order yearEnd create schema in module database -->
					<execution>
						<id>init-db-schema</id>
						<phase>validate</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<url>${db.module.url}</url>
							<username>${db.module.userId}</username>
							<password>${db.module.password}</password>
							<sqlCommand>
								CREATE SCHEMA matchmakers AUTHORIZATION ${db.module.userId};
							</sqlCommand>
							<skip>${init.database.skip}</skip>
						</configuration>
						<inherited>false</inherited>
					</execution>
				</executions>
			</plugin>
			<!-- Executes the sql scripts that initialize or migrate the database -->
			<plugin>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-maven-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<driver>org.postgresql.Driver</driver>
					<url>${db.module.url}</url>
					<user>${db.module.userId}</user>
					<password>${db.module.password}</password>
					<sqlMigrationSuffix>.sql</sqlMigrationSuffix>
					<encoding>UTF-8</encoding>
					<table>DB_MIGRATION_HISTORY</table>
					<outOfOrder>true</outOfOrder>
					<schemas>
						<schema>matchmakers</schema>
					</schemas>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.postgresql</groupId>
						<artifactId>postgresql</artifactId>
						<version>9.4-1206-jdbc42</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<!-- Import Spring Boot starters without inheriting spring-boot-starter-parent MVN project -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-dependencies</artifactId>
			<version>${spring.boot.version}</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-websocket</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-mock</artifactId>
			<version>2.0.8</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>

		<!-- DB -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId> <!-- Includes: org.hibernate.hibernate-core: 5.2.12.Final -->
			<version>${spring.boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId> <!-- REST API for DB resources -->
			<version>${spring.boot.version}</version>
		</dependency>
		<!--<dependency>-->
			<!--<groupId>org.springframework.data</groupId>-->
			<!--<artifactId>spring-data-rest-hal-browser</artifactId> &lt;!&ndash; HATEOAS REST API: http://server:8080/matchmakers/browser/index.html &ndash;&gt;-->
		<!--</dependency>-->
		<dependency>
			<groupId>com.querydsl</groupId>
			<artifactId>querydsl-apt</artifactId>
			<version>${querydsl.version}</version>
		</dependency>
		<dependency>
			<groupId>com.querydsl</groupId>
			<artifactId>querydsl-jpa</artifactId>
			<version>${querydsl.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.4-1206-jdbc42</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId> <!-- H2 in memory Database -->
			<version>1.4.196</version>
		</dependency>

		<!-- Cache -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
			<version>5.2.12.Final</version> <!-- Compatible with org.hibernate.hibernate-core included by spring-boot-starter-data-jpa  -->
		</dependency>

		<!-- Lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.2</version>
		</dependency>

		<!-- Mail -->
		<dependency>
			<groupId>org.simplejavamail</groupId>
			<artifactId>simple-java-mail</artifactId>
			<version>5.0.3</version>
		</dependency>

		<!-- Swagger Dependencies -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<!-- <dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-codegen-maven-plugin</artifactId>
			<version>2.2.3</version>
		</dependency> -->

		<!-- JMX/HTTP Bridge for JMX beans in the configured 'endpoints.jmx.domain' -->
		<dependency>
			<groupId>org.jolokia</groupId>
			<artifactId>jolokia-core</artifactId>
			<version>1.3.7</version>
		</dependency>

		<!-- Commons -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>commons-validator</groupId>
			<artifactId>commons-validator</artifactId>
			<version>1.6</version>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.3.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.3.2</version>
		</dependency>
		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.23.1-GA</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-text</artifactId>
			<version>1.4</version>
		</dependency>

		<!-- JUnit 5-->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.jupiter.version}</version>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-runner</artifactId>
			<version>${junit.platform.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

</project>
